<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:DataGridUC1"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:ViewModel="clr-namespace:DataGridUC1.ViewModel" 
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase" 
    xmlns:local2="clr-namespace:DataGridUC1.Models" 
    xmlns:Controls="clr-namespace:DataGridUC1.Controls" xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
    x:Class="DataGridUC1.DataGridWindow" 
    x:Name="windowUC" 
    mc:Ignorable="d" >


    <b:Interaction.Triggers>

        <b:EventTrigger EventName= "GotFocus">
            <b:InvokeCommandAction Command="{Binding RelayCmdCVS, Mode=OneWay}" 
                                                        CommandParameter="{Binding ElementName=windowUC, Mode=OneWay}"/>
        </b:EventTrigger>
        <b:EventTrigger EventName= "Loaded">
            <b:InvokeCommandAction Command="{Binding RelayCmdCVS, Mode=OneWay}" 
                                                        CommandParameter="{Binding ElementName=windowUC, Mode=OneWay}"/>
        </b:EventTrigger>

    </b:Interaction.Triggers>

    <UserControl.Resources>

        <ResourceDictionary>
            <!--<ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DataGridUC1;component/Themes/DataGridPlusTheme/DataGridPlusStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>-->
            

            <DataTemplate x:Key="ButtonCellTemplate">
                <Button x:Name="LinkCell" Content="LinkCell" >
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName= "Selected" SourceName="{Binding LinkButton}" 
                                        SourceObject="{Binding ElementName=DataContext.Link, Mode=OneWay}">

                            <b:InvokeCommandAction Command="{Binding RelayCmdCompleteFilter, Mode=OneWay}" 
                                         CommandParameter="{Binding CurrentCell, 
                                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}, 
                                             Mode=FindAncestor}}"/>

                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>

            </DataTemplate>

            <Style x:Key="@DataGridRowStyle" TargetType="{x:Type DataGridRow}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Height" Value="28" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Grid Height="28" SnapsToDevicePixels="True">
                                <Border
                                x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                                <DataGridCellsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" 
                                                        TextBlock.Foreground="{TemplateBinding Foreground}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Bd" Property="Background" Value="transparent" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true" />
                                        <Condition Property="Selector.IsSelectionActive" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" 
                                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                    <Setter Property="Foreground" 
                                            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" 
                                                 Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <local2:CompleteConverter x:Key="completeConverter" />

            <CollectionViewSource x:Key="cvsTasks" Source="{Binding Ds.Credits, Mode=OneWay}" 
                                  CollectionViewType="ListCollectionView" >

                <CollectionViewSource.SortDescriptions>

                    <scm:SortDescription PropertyName="Item"/>
                    <scm:SortDescription PropertyName="Check" />
                    <!--<scm:SortDescription PropertyName="DueDate" />-->

                </CollectionViewSource.SortDescriptions>

                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="Item"/>
                    <PropertyGroupDescription PropertyName="Check"/>
                </CollectionViewSource.GroupDescriptions>

                <b:Interaction.Triggers>
                    <b:EventTrigger EventName= "Filter">
                        <b:InvokeCommandAction 
                            Command="{Binding RelayCmdFilter, Mode=OneWay}" 
                            CommandParameter="{Binding cvsTasks, 
                                        RelativeSource={RelativeSource 
                                            AncestorType={x:Type CollectionViewSource}}}" 
                                        PassEventArgsToCommand="True" />
                    </b:EventTrigger>
                    <b:EventTrigger EventName= "Filter">
                        <b:InvokeCommandAction 
                            Command="{Binding RelayCmdSearch, Mode=OneWay}" 
                            CommandParameter="{Binding cvsTasks, 
                                        RelativeSource={RelativeSource 
                                            AncestorType={x:Type CollectionViewSource}}}" 
                                        PassEventArgsToCommand="True" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>

            </CollectionViewSource>

        </ResourceDictionary>

    </UserControl.Resources>

    <UserControl.DataContext>
        <ViewModel:ViewModelUC/>
    </UserControl.DataContext>

    <Grid Margin="5,2,5,2" >

        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>

        <DataGrid  RowDetailsTemplate="{DynamicResource DataGridPlusRowDetailsTemplate}"
                      x:Name="dataGridEx"
                      CanUserAddRows="False" 
                      AutoGenerateColumns="False" 
                      VerticalAlignment="Top" 
                      RowDetailsVisibilityMode="Collapsed" FontSize="14" 
                      IsSynchronizedWithCurrentItem="True" 
                      IsTextSearchEnabled="True" 
                      IsReadOnly="False" MinHeight="200" RowHeight="25" >

            <b:Interaction.Triggers>
                <b:EventTrigger EventName="BeginningEdit">
                    <b:InvokeCommandAction Command="{Binding CommitEditCommand, Mode=OneWay}"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="MouseLeftButtonDown">
                    <b:InvokeCommandAction Command="{Binding CommitEditCommand, Mode=OneWay}"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="CurrentCellChanged">
                    <b:InvokeCommandAction Command="{Binding CommitEditCommand, Mode=OneWay}"/>
                </b:EventTrigger>

                <b:EventTrigger EventName= "GotFocus">
                    <b:InvokeCommandAction Command="{Binding RelayCmdDataGrid, Mode=OneWay}" 
                                         CommandParameter="{Binding ElementName=dataGridEx, Mode=OneWay}"/>
                </b:EventTrigger>
                <b:EventTrigger EventName= "Loaded">
                    <b:InvokeCommandAction Command="{Binding RelayCmdDataGrid, Mode=OneWay}" 
                                         CommandParameter="{Binding ElementName=dataGridEx, Mode=OneWay}"/>
                </b:EventTrigger>

            </b:Interaction.Triggers>

            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                   Color="Yellow"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" 
                   Color="Blue"/>
            </DataGrid.Resources>
            
            <DataGrid.ItemsSource>
                <Binding Mode="OneWay" Source="{StaticResource cvsTasks}"/>
            </DataGrid.ItemsSource>

            <DataGrid.ContextMenu>
                <ContextMenu>
                      <MenuItem Command="ApplicationCommands.Undo" 
                              ToolTip="Undo" FontSize="16">
                        <MenuItem.Icon>
                            <Image Source="/Images/undo16.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="ApplicationCommands.Redo" 
                              ToolTip="Redo" FontSize="16">
                        <MenuItem.Icon>
                            <Image Source="/Images/Redo.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Height="2" />

                    <MenuItem Command="{Binding AddsNewRow, Mode=OneWay}" 
                              Header="Add New Row" FontSize="16" >
                        <MenuItem.Icon>
                            <Image Source="Images/newdocument32.png" ></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="{Binding RemoveSelectedRowCommand, Mode=OneWay}" 
                              Header="Remove Selected Row" FontSize="16">
                        <MenuItem.Icon>
                            <Image Source="Images/close.png" ></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Height="2" />
                    <MenuItem Command="{Binding ShowHideGroupColCommand, Mode=OneWay}" 
                              Header="Toggle 'Group' Column Visibility" FontSize="16">
                        <MenuItem.Icon>
                            <Image Source="Images/config.png" ></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Height="2" />
                    <MenuItem Command="{Binding LoadXMLCommand, Mode=OneWay}" 
                              Header="Read Credits from XML" FontSize="16">
                        <MenuItem.Icon>
                            <Image Source="Images/open16.png" ></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="{Binding SaveXml, Mode=OneWay}" 
                              Header="Save Credits to XML" FontSize="16">
                        <MenuItem.Icon>
                            <Image Source="/Images/save16.png" ></Image>
                        </MenuItem.Icon>
                    </MenuItem>

                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.GroupStyle>

                <!--Style for groups at top level.-->

                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Margin" Value="0,0,0,5"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True" 
                                                  Background="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" 
                                                  Foreground="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}" 
                                                  BorderThickness="1,1,1,5">
                                            <Expander.Header>
                                                <DockPanel HorizontalAlignment="Stretch">
                                                    <TextBlock FontWeight="Bold" 
                                                               Text="{Binding Name}"  
                                                               Margin="2,0,0,0" Width="200" FontSize="14" 
                                                               HorizontalAlignment="Left"/>
                                                    <TextBlock FontWeight="Bold" 
                                                               Text="{Binding ItemCount}" Margin="51,0,0,0"/>
                                                </DockPanel>
                                            </Expander.Header>

                                            <ItemsPresenter />

                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>

                <!--Style for groups under the top level.-->
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Background="LightBlue" HorizontalAlignment="Stretch">
                                <TextBlock Text="{Binding Name, Converter={StaticResource completeConverter}}"
                                           Foreground="Blue" Margin="27,0,0,0" Width="200" 
                                           FontWeight="Normal" FontSize="14" HorizontalAlignment="Left"/>
                                <TextBlock Text="{Binding ItemCount}" Foreground="Blue" 
                                           FontWeight="Bold" Margin="50,0,0,0"/>
                            </DockPanel>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="White" />
                    <EventSetter Event="FrameworkElement.RequestBringIntoView" 
                                 Handler="DataGrid_Documents_RequestBringIntoView"  />
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridTemplateColumn
                           x:Name="Expander"
                           Width="1.5*"
                           MinWidth="55"
                           CanUserResize="True"
                           CanUserSort="True"
                           Header="Expand"
                           IsReadOnly="False"
                           SortMemberPath="Item" 
                           MaxWidth="55">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Expander  
                                            BorderThickness="0,0,0,0" 
                                            Collapsed="ShowHideDetailRows" 
                                            Expanded="ShowHideDetailRows">
                                </Expander>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Group"
                                    Binding="{Binding Item, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                    MaxWidth="120" 
                                    CellStyle="{DynamicResource DataGridCellStyle}" MinWidth="0" >
                </DataGridTextColumn>

                <DataGridTemplateColumn  Header="Note" 
                                         MaxWidth="330" MinWidth="250">
                     <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <toolkit:RichTextBox x:Name="rtb" MinWidth="400" MaxWidth="600"
                                Text="{Binding Note, Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged}" >
                                <toolkit:RichTextBox.TextFormatter>
                                    <toolkit:RtfFormatter />
                                </toolkit:RichTextBox.TextFormatter>
                            </toolkit:RichTextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridCheckBoxColumn Header="Check" 
                                       Binding="{Binding Check, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                       MinWidth="50" />

                <DataGridTextColumn Header="Rating" 
                                      Binding="{Binding Rating, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsReadOnly="False" DisplayIndex="4" MinWidth="70" />

                <DataGridTemplateColumn x:Name="CBCol" Header="CB" DisplayIndex="5">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="comboBox" ItemsSource="{Binding DataContext.ComboBoxItems, ElementName=dataGridEx}" 
                                        DisplayMemberPath="Item" 
                                        Text="{Binding Rating, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      Width="80" MinWidth="28" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridHyperlinkColumn x:Name="dataGridHyperlinkColumn" 
                                          Header="Links"
                                          Binding="{Binding Link, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                          IsReadOnly="True" 
                                         CellStyle="{DynamicResource DataGridCellStyle}"  >

                 </DataGridHyperlinkColumn>

                <DataGridTextColumn Header="ID" 
                          Binding="{Binding ID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="30"  />

            </DataGrid.Columns>

        </DataGrid>

        <StackPanel Orientation="Horizontal" Grid.Row="1" 
                    VerticalAlignment="Bottom" 
                    MinHeight="33" MaxHeight="44">
            
            <Label Content="Text Search"  HorizontalAlignment="Left" 
                   FontSize="14" FontWeight="Bold" VerticalAlignment="Center" 
                   ToolTip="Text Search in Col 'Note' or 'Group'" />
            <TextBox x:Name="SearchBox"
                Margin="5,1,3,2"
                IsEnabled="True" ToolTip="Item" HorizontalAlignment="Left" 
                    MinWidth="120" FontSize="14" AcceptsReturn="True" 
                    MaxLines="1" >

                <b:Interaction.Triggers>
                    <b:EventTrigger EventName= "TextChanged">
                        <b:InvokeCommandAction Command="{Binding RelayCmdSearchBox, Mode=OneWay}" 
                            CommandParameter="{Binding ElementName= SearchBox, 
                                Mode=OneWay}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>

            </TextBox>

            <TextBlock Text=" Filter out checked items " 
                       VerticalAlignment="Center" FontWeight="Bold" FontSize="14" />
            <CheckBox x:Name="cbCompleteFilter" 
                      VerticalAlignment="Center"
                      FontWeight="Bold" FontSize="14" >

                <b:Interaction.Triggers>

                    <b:EventTrigger EventName= "Checked">
                        <b:InvokeCommandAction Command="{Binding RelayCmdCompleteFilter, Mode=OneWay}" 
                                                                     CommandParameter="{Binding ElementName=cbCompleteFilter, 
                                                                         Mode=OneWay}"/>
                    </b:EventTrigger>
                    <b:EventTrigger EventName= "Unchecked">
                        <b:InvokeCommandAction Command="{Binding RelayCmdCompleteFilter, Mode=OneWay}" 
                                                                    CommandParameter="{Binding ElementName=cbCompleteFilter, 
                                                                        Mode=OneWay}"/>
                    </b:EventTrigger>

                </b:Interaction.Triggers>

            </CheckBox>

            <Button Content="Remove Groups" 
                     Margin="10,2,2,2" FontWeight="Bold" FontSize="14" 
                     Command="{Binding UngroupCommand, Mode=OneWay}" 
                    />

            <Button Content="Grouping by Group/Status" 
                     Margin="2" FontWeight="Bold" FontSize="14" 
                    Command="{Binding GroupCommand, Mode=OneWay}" 
                    />

            <Button Content="Add New Row" 
                     Margin="2,2,2,2" Height="36" Width="99" 
                     HorizontalAlignment="Left" 
                     Command="{Binding AddsNewRow, Mode=OneWay}" 
                     FontWeight="Bold" FontSize="14"/>
            
            <Button Content="Save Credits" 
                     Width="99" 
                     HorizontalAlignment="Left" 
                     Command="{Binding SaveXml, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                     Margin="2,2,2,2" Height="36" FontWeight="Bold" FontSize="14"/>

            <Button Content="Exit App" 
                     Width="70" 
                     HorizontalAlignment="Left" 
                     Command="{Binding ExitCommand, Mode=OneWay}" 
                     Margin="2,2,2,2" Height="36" FontWeight="Bold" FontSize="14"/>
        </StackPanel>

    </Grid>

</UserControl>